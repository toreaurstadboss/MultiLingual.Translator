@page "/"
@inject ITranslateUtil TransUtil
@inject IDetectLanguageUtil DetectLangUtil
@inject IJSRuntime JS
@inject ITextToSpeechUtil TextToSpeechUtil
@inject IAudioManager AudioManager

@using MultiLingual.Translator.Lib;
@using MultiLingual.Translator.Lib.Models;
@using MultiLingual.Translator.Models;
@using Plugin.Maui.Audio;
@using System.Text.Json;
@using System.Text;

<h4>Azure AI Text Translation with Text-To-Speech</h4>

<EditForm Model="@Model" OnValidSubmit="@Submit" class="form-group" style="background-color:aliceblue;">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group row">
        <label for="Model.InputText">Text to translate</label>
        <InputTextArea @bind-Value="Model!.InputText" placeholder="Enter text to translate" @ref="inputTextRef" id="textToTranslate" rows="5" />
    </div>

    <div class="form-group row">
        <span>Detected language of text to translate</span>
        <InputText class="languageLabelText" readonly="readonly" placeholder="The detected language of the text to translate" @bind-Value="Model!.DetectedLanguageInfo"></InputText>
        @if (Model.DetectedLanguageInfo != null){
            <img src="@FlagIcon" title="@FlagIcon" alt="@FlagIcon" class="flagIcon" />
        }      
    </div>
    <br />
    
    <div class="form-group row">
        <span>Translate into language</span>   <span>Selected translation language: @Model.TargetLanguage</span>
       <Blazored.Typeahead.BlazoredTypeahead placeholder="Select target language"
            ConvertMethod="(NameValue targetLanguage) => targetLanguage?.Value"
            EnableDropDown="true"
            Debounce="400"
            Context="TargetLanguageContext" MaximumSuggestions="50"
            SearchMethod="SearchAvailableLanguages"             
            @bind-Value="Model.TargetLanguage"> 
            <SelectedTemplate Context="TargetLanguageContext">
                @TargetLanguageContext
            </SelectedTemplate>
            <ResultTemplate Context="TargetLanguageContext">
                @TargetLanguageContext.Name
            </ResultTemplate>
       </Blazored.Typeahead.BlazoredTypeahead>
        <br />
          @if (Model.TargetLanguage != null){
            <img src="@TargetFlagIcon" title="@TargetFlagIcon" alt="@TargetFlagIcon" class="flagIcon" />

            @if (!string.IsNullOrWhiteSpace(Model.TranslatedText))
            {
                <button @onclick="SpeakText" style="margin:8pt;font-size:20pt; background-color:lightgoldenrodyellow; font-weight:600" class="btn btn-outline-success col-sm-2" title="Click here to pronounce the translated text">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-megaphone" viewBox="0 0 16 16">
                    <path d="M13 2.5a1.5 1.5 0 0 1 3 0v11a1.5 1.5 0 0 1-3 0v-.214c-2.162-1.241-4.49-1.843-6.912-2.083l.405 2.712A1 1 0 0 1 5.51 15.1h-.548a1 1 0 0 1-.916-.599l-1.85-3.49a68.14 68.14 0 0 0-.202-.003A2.014 2.014 0 0 1 0 9V7a2.02 2.02 0 0 1 1.992-2.013 74.663 74.663 0 0 0 2.483-.075c3.043-.154 6.148-.849 8.525-2.199V2.5zm1 0v11a.5.5 0 0 0 1 0v-11a.5.5 0 0 0-1 0zm-1 1.35c-2.344 1.205-5.209 1.842-8 2.033v4.233c.18.01.359.022.537.036 2.568.189 5.093.744 7.463 1.993V3.85zm-9 6.215v-4.13a95.09 95.09 0 0 1-1.992.052A1.02 1.02 0 0 0 1 7v2c0 .55.448 1.002 1.006 1.009A60.49 60.49 0 0 1 4 10.065zm-.657.975 1.609 3.037.01.024h.548l-.002-.014-.443-2.966a68.019 68.019 0 0 0-1.722-.082z" />
                    </svg>Speak
                </button>
                <button @onclick="SwapInputTextWithTranslation" style="margin-top:20px;width:300px;font-weight:600;height:40px;color:darkgreen;background-color:lightgreen;border-radius:12px;">
                    Swap translation to input text &#8593;&#8595;
                </button>
                @if (Model.AvailableVoiceActorIds?.Any() == true)
                {
                    <label>Voice style</label> 
                    <InputSelect placeholder="Select voice style" @bind-Value="Model!.PreferredVoiceStyle">
                        @foreach (var voiceStyle in Model.AvailableVoiceStyles)
                        {
                            <option value="@voiceStyle">
                                @voiceStyle
                            </option>
                        }
                    </InputSelect>
                }
                @if (!string.IsNullOrWhiteSpace(Model.ActiveVoiceActorId))
                {
                    <span>Voice Actor Id: @Model.ActiveVoiceActorId</span>
                    <span style="color:cornflowerblue;font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif" class="small">Audio content: @Model.AdditionalVoiceDataMetaInformation</span>
                }

                @if (Model.AvailableVoiceActorIds?.Any() == true)
                {
                    <span>Select voice actor in language:</span>
                    <InputSelect placeholder="Choose the target voice actor" @bind-Value="Model!.PreferredVoiceActorId">
                        @foreach (var actor in Model.AvailableVoiceActorIds.OrderBy(a => a))
                        {
                            <option value="@actor">@actor</option>
                        }
                    </InputSelect>
                }
               
            }
          }
  
    </div>
    <br />  

    <ul class="nav nav-tabs" id="myTab"> <!-- Had to include Bootstrap 5 js to make tabs work here, see index.html file -->
        <li class="nav-item">
            <a href="#home" class="nav-link active" data-bs-toggle="tab">Translation</a>
        </li>
        <li class="nav-item">
            <a href="#profile" class="nav-link" data-bs-toggle="tab">Transcript</a>
        </li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane fade show active" id="home">
            <h4 class="mt-8">Translated text</h4>
            <InputTextArea class="outputTranslationTextArea" readonly="readonly" placeholder="The translated text target language" @bind-Value="Model!.TranslatedText" rows="5"></InputTextArea>
        </div>
        <div class="tab-pane fade" id="profile" @onselect="() => PrepareSpeakText()">
            <h4 class="mt-8">Transcript</h4>
            <InputTextArea class="outputTranslationTextArea" readonly="readonly" placeholder="Transcript of the voice audio data" @bind-Value="Model!.Transcript" rows="5"></InputTextArea>
        </div>
    </div>

    <button type="submit" class="submitButton">Submit</button>

</EditForm>

@code {
   

}